{"remainingRequest":"/Users/apple/Desktop/vueprototype/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/vueprototype/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/vueprototype/src/pages/admin/dictionary/manage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/vueprototype/src/pages/admin/dictionary/manage/index.vue","mtime":1599616394000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dictionary\">\n    <div class=\"operators\">\n      <div class=\"search\">\n        <el-input\n          type=\"text\"\n          v-model.trim=\"key\"\n          placeholder=\"请输入字典名\"\n        ></el-input>\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-search\"\n          size=\"mini\"\n          @click=\"search\"\n          >搜索</el-button\n        >\n      </div>\n    </div>\n    <div class=\"table-list\">\n      <div class=\"buttons\">\n        <el-button type=\"primary\" size=\"small\" @click=\"add\"\n          >&nbsp;字典新增</el-button\n        >\n        <el-button type=\"danger\" size=\"small\" @click=\"changeMultStatus(1)\"\n          >&nbsp;批量禁用</el-button\n        >\n        <el-button type=\"primary\" size=\"small\" @click=\"changeMultStatus(2)\"\n          >&nbsp;批量启用</el-button\n        >\n      </div>\n      <el-table\n        :data=\"table\"\n        ref=\"multipleTable\"\n        @selection-change=\"handleSelectionChange\"\n        :row-key=\"getRowKey\"\n        header-row-class-name=\"headerRow\"\n        :header-cell-style=\"{ background: '#eef1f6', color: '#606266' }\"\n        :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n      >\n        <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n        <el-table-column\n          v-for=\"(column, i) in columnConfig\"\n          :key=\"i\"\n          :label=\"column.label\"\n          :prop=\"column.prop\"\n          :min-width=\"column.minWidth\"\n          :align=\"column.align\"\n        ></el-table-column>\n        <el-table-column label=\"状态\">\n          <template #default=\"{row}\">\n            <el-switch\n              v-model=\"row.status\"\n              :active-color=\"activeColor\"\n              :inactive-color=\"unactiveColor\"\n              @change=\"(val) => changeStatus(val, row)\"\n            >\n            </el-switch>\n          </template>\n        </el-table-column>\n        <!-- <el-table-column prop=\"remarks\" label=\"备注\"></el-table-column> -->\n        <el-table-column label=\"操作\" align=\"center\">\n          <template #default=\"{row}\">\n            <el-button type=\"primary\" v-if='row.children' size=\"mini\" @click=\"addType(row)\"\n              >添加</el-button\n            >\n            <el-button type=\"primary\" size=\"mini\" @click=\"edit(row)\"\n              >编辑</el-button\n            >\n            <el-button type=\"warning\" size=\"mini\" @click=\"del(row)\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <cdialog v-if=\"showDictionary\" :types=\"types\"></cdialog>\n    <v-dialog v-if=\"showDictionaryType\"></v-dialog>\n    <div class=\"pagination\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"page\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        :page-size=\"limit\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dialog from \"@/components/dictionary/manage/dialog\";\nimport vDialog from '@/components/dictionary/type/dialog';\nimport { columnConfig } from \"./index\";\nexport default {\n  components: { cdialog: dialog,'v-dialog':vDialog },\n  data() {\n    return {\n      columnConfig: columnConfig,\n      activeColor: \"#00B9ED\",\n      unactiveColor: \"red\",\n      key: \"\",\n      table: [],\n      page: 1,\n      limit: 10,\n      total: 0,\n      // 所有字典分类\n      types: [],\n      showDictionary: false,\n      showDictionaryType:false,\n      multipleSelection: [],\n    };\n  },\n  events: {\n    getDictionary({ id, name }) {\n      if (id) {\n        this.editSubmit({ id, name });\n        return;\n      }\n      this.addSubmit({ name });\n    },\n    closeDictionaryDialog() {\n      this.showDictionary = false;\n       this.showDictionaryType = false;\n    },\n    getDictionaryType({ id,parentId, name }) {\n      if (id) {\n        this.editValueSubmit({ id, parentId, name });\n        return;\n      }\n      this.addValueSubmit({ parentId,name});\n    },\n    // closeDictionaryTypeDialog() {\n    //   this.showDictionaryType = false;\n    // }\n  },\n  methods: {\n    handleSizeChange(pageSize) {\n      this.limit = pageSize;\n      this.search();\n    },\n    handleCurrentChange(current) {\n      this.page = current;\n      this.search();\n    },\n    search() {\n      this.$axios({\n        url: \"/api-admin/dictType/list\",\n        type: \"get\",\n        data: {\n          page: this.page,\n          limit: this.limit,\n          name: this.key,\n        },\n      })\n        .then((res) => {\n          const page = (res || {}).page || {};\n          this.table = page.rows || [];\n          if(this.table.length>0){\n            this.table.forEach(item => {\n              item.status = item.delFlag == 0?false:true;\n              item.children.forEach(_item => {\n                _item.status = _item.delFlag == 0?false:true;\n              })\n            })\n          }\n          this.total = +page.total;\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"获取字典列表失败\",\n          });\n        });\n    },\n    add() {\n      this.showDictionary = true;\n    },\n    addType(row){\n      this.showDictionaryType = true;\n      this.$nextTick(_ => {\n        this.$trigger('addTypeValue',row)\n      })\n    },\n    addSubmit({ name }) {\n      this.$axios({\n        url: \"/api-admin/dictType/add\",\n        type: \"post\",\n        data: {\n          name\n        },\n      })\n        .then((res) => {\n          this.showDictionary = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"添加字典失败\",\n          });\n        });\n    },\n    edit(row) {\n      console.log(row);\n      //判断是字典分类还是字典值编辑\n      if(row.children){\n        this.showDictionary = true;\n         this.$nextTick((_) => {\n        this.$trigger(\"editDictionary\", row);\n      });\n      }else{\n        let parentRow;\n        for(let i=0;i<this.table.length;i++){\n          let _item=this.table[i];\n          this.table[i].children.forEach(it => {\n           if(it.id == row.id) parentRow = _item;\n          })\n\n        }\n        console.log(parentRow);\n        this.showDictionaryType = true;\n        //值编辑需要获取到主键id和父级id\n      this.$nextTick((_) => {\n        this.$trigger(\"editDictionaryType\", parentRow,row);\n      });\n      }\n    },\n    editSubmit({ id, name}) {\n      this.$axios({\n        url: \"/api-admin/dictType/update\",\n        type: \"post\",\n        data: {\n          id,\n          name\n        },\n      })\n        .then((res) => {\n          this.showDictionary = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"字典更新失败\",\n          });\n        });\n    },\n    addValueSubmit({parentId,name}){\n       this.$axios({\n        url: \"/api-admin/dict/add\",\n        type: \"post\",\n        data: {\n          parentId,\n          name\n        },\n      })\n        .then((res) => {\n          this.showDictionaryType = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"添加字典值失败\",\n          });\n        });\n    },\n    editValueSubmit({id,parentId,name}){\n      this.$axios({\n        url: \"/api-admin/dict/update\",\n        type: \"post\",\n        data: {\n          id,\n          parentId,\n          name\n        },\n      })\n        .then((res) => {\n          this.showDictionaryType = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"字典值更新失败\",\n          });\n        });\n    },\n    changeStatus(val,row){\n      console.log(val,row)\n      let params={},url='';\n      if(row.children){\n        //更改分类\n        params = {\n          id:row.id,\n          name:row.className,\n          delFlag:val?1:0\n        },\n        url='/api-admin/dictType/update'\n      }else{\n        //更改值\n         params = {\n          id:row.id,\n          parentId:row.parentId,\n          name:row.name,\n          delFlag:val?1:0\n        },\n        url='/api-admin/dict/update'\n      }\n      this.$axios({\n        url: url,\n        type: \"post\",\n        data:params\n      })\n        .then((res) => {\n          let { code, msg } = res;\n          if (code == 0) {\n            this.$set(row, \"status\", val);\n            this.$message({\n              type: \"success\",\n              message: msg || \"状态更新成功\",\n            });\n            this.search();\n          } else {\n            this.$set(row, \"status\", !val);\n            this.$message({\n              type: \"info\",\n              message: msg || \"状态更新失败\",\n            });\n          }\n        })\n        .catch((err) => {\n          this.$set(row, \"status\", !val);\n          this.$message({\n            type: \"info\",\n            message: err.msg || \"状态更新失败\",\n          });\n        });\n    },\n    del(row) {\n      this.$confirm(\"是否确认删除此条字典字段?\", \"安全提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          let url= row.children?'/api-admin/dictType/delete':'/api-admin/dict/delete'\n          this.$axios({\n            url: url,\n            type: \"post\",\n            data: {\n              id:row.id\n            },\n          })\n            .then((res) => {\n              this.$message({\n                type: \"success\",\n                message: \"删除成功!\",\n              });\n              this.search();\n            })\n            .catch((err) => {\n              this.$message({\n                message: err.msg || \"删除失败\",\n              });\n            });\n        })\n        .catch(() => {});\n    },\n    getAllDictType() {\n      this.$axios({\n        url: \"/api-admin/dictType/all\",\n        type: \"get\",\n      }).then((res) => {\n        this.types = res.page || [];\n      });\n    },\n    getDictTypeName(id) {\n      return this.types.find((item) => +item.id === +id).name || \"\";\n    },\n    handleSelectionChange(selection) {\n      this.multipleSelection = selection;\n    },\n    changeMultStatus(i) {\n      console.log(i)\n      if (this.multipleSelection.length == 0) {\n        this.$message({\n          type: \"info\",\n          message: \"请勾选要批量禁用的项\",\n        });\n      } else {\n        this.$confirm(\"是否确认进行批量禁用?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\",\n        })\n          .then(() => {\n            let dictIds=[],dictTypeIds=[];\n            this.multipleSelection.forEach(item => {\n              dictTypeIds.push(item.id);\n              if(item.children.length>0){\n                item.children.forEach(_item => {\n                  dictIds.push(_item.id)\n                })\n              }\n            })\n            this.$axios({\n              url: i==1?\"/api-admin/dictType/batchDisable\":\"/api-admin/dictType/batchEnable\",\n              type: \"post\",\n              data: {\n                dictIds:dictIds.join(','),\n                dictTypeIds:dictTypeIds.length>0?dictTypeIds.join(','):''\n              },\n            })\n              .then((res) => {\n                this.$message({\n                  type: \"success\",\n                  message: \"操作成功!\",\n                });\n                this.search();\n              })\n              .catch((err) => {\n                this.$message({\n                  message: err.msg || \"操作失败\",\n                });\n              });\n          })\n          .catch(() => {});\n      }\n    },\n    getRowKey(row) {\n      return row.id;\n    },\n  },\n  created() {\n    this.getAllDictType();\n    this.search();\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.dictionary {\n  padding: 20px;\n  .operators,\n  .operators .search {\n    display: flex;\n  }\n  .table-list {\n    margin: 20px 0 0 0;\n    background: #ffffff;\n    .buttons {\n      padding-top: 20px;\n    }\n  }\n  .operators /deep/ .el-input {\n    width: 250px;\n  }\n  // .pagination {\n  //   padding: 50px;\n  //   text-align: center;\n  //   background-color: #fff;\n  // }\n  /deep/ .el-button {\n    margin: 0 0 0 20px;\n  }\n}\n</style>\n"],"sourceRoot":"src/pages/admin/dictionary/manage"}]}