{"remainingRequest":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/vueprototype/src/pages/admin/dictionary/manage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/vueprototype/src/pages/admin/dictionary/manage/index.vue","mtime":1599616394000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/pages/admin/dictionary/manage","sourcesContent":["<template>\n  <div class=\"dictionary\">\n    <div class=\"operators\">\n      <div class=\"search\">\n        <el-input\n          type=\"text\"\n          v-model.trim=\"key\"\n          placeholder=\"请输入字典名\"\n        ></el-input>\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-search\"\n          size=\"mini\"\n          @click=\"search\"\n          >搜索</el-button\n        >\n      </div>\n    </div>\n    <div class=\"table-list\">\n      <div class=\"buttons\">\n        <el-button type=\"primary\" size=\"small\" @click=\"add\"\n          >&nbsp;字典新增</el-button\n        >\n        <el-button type=\"danger\" size=\"small\" @click=\"changeMultStatus(1)\"\n          >&nbsp;批量禁用</el-button\n        >\n        <el-button type=\"primary\" size=\"small\" @click=\"changeMultStatus(2)\"\n          >&nbsp;批量启用</el-button\n        >\n      </div>\n      <el-table\n        :data=\"table\"\n        ref=\"multipleTable\"\n        @selection-change=\"handleSelectionChange\"\n        :row-key=\"getRowKey\"\n        header-row-class-name=\"headerRow\"\n        :header-cell-style=\"{ background: '#eef1f6', color: '#606266' }\"\n        :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n      >\n        <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n        <el-table-column\n          v-for=\"(column, i) in columnConfig\"\n          :key=\"i\"\n          :label=\"column.label\"\n          :prop=\"column.prop\"\n          :min-width=\"column.minWidth\"\n          :align=\"column.align\"\n        ></el-table-column>\n        <el-table-column label=\"状态\">\n          <template #default=\"{row}\">\n            <el-switch\n              v-model=\"row.status\"\n              :active-color=\"activeColor\"\n              :inactive-color=\"unactiveColor\"\n              @change=\"(val) => changeStatus(val, row)\"\n            >\n            </el-switch>\n          </template>\n        </el-table-column>\n        <!-- <el-table-column prop=\"remarks\" label=\"备注\"></el-table-column> -->\n        <el-table-column label=\"操作\" align=\"center\">\n          <template #default=\"{row}\">\n            <el-button type=\"primary\" v-if='row.children' size=\"mini\" @click=\"addType(row)\"\n              >添加</el-button\n            >\n            <el-button type=\"primary\" size=\"mini\" @click=\"edit(row)\"\n              >编辑</el-button\n            >\n            <el-button type=\"warning\" size=\"mini\" @click=\"del(row)\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <cdialog v-if=\"showDictionary\" :types=\"types\"></cdialog>\n    <v-dialog v-if=\"showDictionaryType\"></v-dialog>\n    <div class=\"pagination\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"page\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        :page-size=\"limit\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dialog from \"@/components/dictionary/manage/dialog\";\nimport vDialog from '@/components/dictionary/type/dialog';\nimport { columnConfig } from \"./index\";\nexport default {\n  components: { cdialog: dialog,'v-dialog':vDialog },\n  data() {\n    return {\n      columnConfig: columnConfig,\n      activeColor: \"#00B9ED\",\n      unactiveColor: \"red\",\n      key: \"\",\n      table: [],\n      page: 1,\n      limit: 10,\n      total: 0,\n      // 所有字典分类\n      types: [],\n      showDictionary: false,\n      showDictionaryType:false,\n      multipleSelection: [],\n    };\n  },\n  events: {\n    getDictionary({ id, name }) {\n      if (id) {\n        this.editSubmit({ id, name });\n        return;\n      }\n      this.addSubmit({ name });\n    },\n    closeDictionaryDialog() {\n      this.showDictionary = false;\n       this.showDictionaryType = false;\n    },\n    getDictionaryType({ id,parentId, name }) {\n      if (id) {\n        this.editValueSubmit({ id, parentId, name });\n        return;\n      }\n      this.addValueSubmit({ parentId,name});\n    },\n    // closeDictionaryTypeDialog() {\n    //   this.showDictionaryType = false;\n    // }\n  },\n  methods: {\n    handleSizeChange(pageSize) {\n      this.limit = pageSize;\n      this.search();\n    },\n    handleCurrentChange(current) {\n      this.page = current;\n      this.search();\n    },\n    search() {\n      this.$axios({\n        url: \"/api-admin/dictType/list\",\n        type: \"get\",\n        data: {\n          page: this.page,\n          limit: this.limit,\n          name: this.key,\n        },\n      })\n        .then((res) => {\n          const page = (res || {}).page || {};\n          this.table = page.rows || [];\n          if(this.table.length>0){\n            this.table.forEach(item => {\n              item.status = item.delFlag == 0?false:true;\n              item.children.forEach(_item => {\n                _item.status = _item.delFlag == 0?false:true;\n              })\n            })\n          }\n          this.total = +page.total;\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"获取字典列表失败\",\n          });\n        });\n    },\n    add() {\n      this.showDictionary = true;\n    },\n    addType(row){\n      this.showDictionaryType = true;\n      this.$nextTick(_ => {\n        this.$trigger('addTypeValue',row)\n      })\n    },\n    addSubmit({ name }) {\n      this.$axios({\n        url: \"/api-admin/dictType/add\",\n        type: \"post\",\n        data: {\n          name\n        },\n      })\n        .then((res) => {\n          this.showDictionary = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"添加字典失败\",\n          });\n        });\n    },\n    edit(row) {\n      console.log(row);\n      //判断是字典分类还是字典值编辑\n      if(row.children){\n        this.showDictionary = true;\n         this.$nextTick((_) => {\n        this.$trigger(\"editDictionary\", row);\n      });\n      }else{\n        let parentRow;\n        for(let i=0;i<this.table.length;i++){\n          let _item=this.table[i];\n          this.table[i].children.forEach(it => {\n           if(it.id == row.id) parentRow = _item;\n          })\n\n        }\n        console.log(parentRow);\n        this.showDictionaryType = true;\n        //值编辑需要获取到主键id和父级id\n      this.$nextTick((_) => {\n        this.$trigger(\"editDictionaryType\", parentRow,row);\n      });\n      }\n    },\n    editSubmit({ id, name}) {\n      this.$axios({\n        url: \"/api-admin/dictType/update\",\n        type: \"post\",\n        data: {\n          id,\n          name\n        },\n      })\n        .then((res) => {\n          this.showDictionary = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"字典更新失败\",\n          });\n        });\n    },\n    addValueSubmit({parentId,name}){\n       this.$axios({\n        url: \"/api-admin/dict/add\",\n        type: \"post\",\n        data: {\n          parentId,\n          name\n        },\n      })\n        .then((res) => {\n          this.showDictionaryType = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"添加字典值失败\",\n          });\n        });\n    },\n    editValueSubmit({id,parentId,name}){\n      this.$axios({\n        url: \"/api-admin/dict/update\",\n        type: \"post\",\n        data: {\n          id,\n          parentId,\n          name\n        },\n      })\n        .then((res) => {\n          this.showDictionaryType = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"字典值更新失败\",\n          });\n        });\n    },\n    changeStatus(val,row){\n      console.log(val,row)\n      let params={},url='';\n      if(row.children){\n        //更改分类\n        params = {\n          id:row.id,\n          name:row.className,\n          delFlag:val?1:0\n        },\n        url='/api-admin/dictType/update'\n      }else{\n        //更改值\n         params = {\n          id:row.id,\n          parentId:row.parentId,\n          name:row.name,\n          delFlag:val?1:0\n        },\n        url='/api-admin/dict/update'\n      }\n      this.$axios({\n        url: url,\n        type: \"post\",\n        data:params\n      })\n        .then((res) => {\n          let { code, msg } = res;\n          if (code == 0) {\n            this.$set(row, \"status\", val);\n            this.$message({\n              type: \"success\",\n              message: msg || \"状态更新成功\",\n            });\n            this.search();\n          } else {\n            this.$set(row, \"status\", !val);\n            this.$message({\n              type: \"info\",\n              message: msg || \"状态更新失败\",\n            });\n          }\n        })\n        .catch((err) => {\n          this.$set(row, \"status\", !val);\n          this.$message({\n            type: \"info\",\n            message: err.msg || \"状态更新失败\",\n          });\n        });\n    },\n    del(row) {\n      this.$confirm(\"是否确认删除此条字典字段?\", \"安全提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          let url= row.children?'/api-admin/dictType/delete':'/api-admin/dict/delete'\n          this.$axios({\n            url: url,\n            type: \"post\",\n            data: {\n              id:row.id\n            },\n          })\n            .then((res) => {\n              this.$message({\n                type: \"success\",\n                message: \"删除成功!\",\n              });\n              this.search();\n            })\n            .catch((err) => {\n              this.$message({\n                message: err.msg || \"删除失败\",\n              });\n            });\n        })\n        .catch(() => {});\n    },\n    getAllDictType() {\n      this.$axios({\n        url: \"/api-admin/dictType/all\",\n        type: \"get\",\n      }).then((res) => {\n        this.types = res.page || [];\n      });\n    },\n    getDictTypeName(id) {\n      return this.types.find((item) => +item.id === +id).name || \"\";\n    },\n    handleSelectionChange(selection) {\n      this.multipleSelection = selection;\n    },\n    changeMultStatus(i) {\n      console.log(i)\n      if (this.multipleSelection.length == 0) {\n        this.$message({\n          type: \"info\",\n          message: \"请勾选要批量禁用的项\",\n        });\n      } else {\n        this.$confirm(\"是否确认进行批量禁用?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\",\n        })\n          .then(() => {\n            let dictIds=[],dictTypeIds=[];\n            this.multipleSelection.forEach(item => {\n              dictTypeIds.push(item.id);\n              if(item.children.length>0){\n                item.children.forEach(_item => {\n                  dictIds.push(_item.id)\n                })\n              }\n            })\n            this.$axios({\n              url: i==1?\"/api-admin/dictType/batchDisable\":\"/api-admin/dictType/batchEnable\",\n              type: \"post\",\n              data: {\n                dictIds:dictIds.join(','),\n                dictTypeIds:dictTypeIds.length>0?dictTypeIds.join(','):''\n              },\n            })\n              .then((res) => {\n                this.$message({\n                  type: \"success\",\n                  message: \"操作成功!\",\n                });\n                this.search();\n              })\n              .catch((err) => {\n                this.$message({\n                  message: err.msg || \"操作失败\",\n                });\n              });\n          })\n          .catch(() => {});\n      }\n    },\n    getRowKey(row) {\n      return row.id;\n    },\n  },\n  created() {\n    this.getAllDictType();\n    this.search();\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.dictionary {\n  padding: 20px;\n  .operators,\n  .operators .search {\n    display: flex;\n  }\n  .table-list {\n    margin: 20px 0 0 0;\n    background: #ffffff;\n    .buttons {\n      padding-top: 20px;\n    }\n  }\n  .operators /deep/ .el-input {\n    width: 250px;\n  }\n  // .pagination {\n  //   padding: 50px;\n  //   text-align: center;\n  //   background-color: #fff;\n  // }\n  /deep/ .el-button {\n    margin: 0 0 0 20px;\n  }\n}\n</style>\n"]}]}