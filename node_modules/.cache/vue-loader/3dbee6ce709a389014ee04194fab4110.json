{"remainingRequest":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/vueprototype/src/pages/admin/user/manage/index.vue?vue&type=style&index=0&id=7d750c50&lang=less&scoped=true&","dependencies":[{"path":"/Users/apple/Desktop/vueprototype/src/pages/admin/user/manage/index.vue","mtime":1599616394000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudXNlci1tYW5hZ2UgewogIHBhZGRpbmc6IDIwcHg7CiAgLm9wZXJhdG9ycywKICAub3BlcmF0b3JzIC5zZWFyY2ggewogICAgZGlzcGxheTogZmxleDsKICB9CiAgLnRhYmxlLWxpc3QgewogICAgbWFyZ2luOiAyMHB4IDAgMCAwOwogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIHBhZGRpbmctdG9wOiAyMHB4OwogIH0KICAub3BlcmF0b3JzIC9kZWVwLyAuZWwtaW5wdXQgewogICAgd2lkdGg6IDI1MHB4OwogIH0KICAucGFnaW5hdGlvbiB7CiAgICBwYWRkaW5nOiA1MHB4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICB9CiAgL2RlZXAvIC5lbC1idXR0b24gewogICAgbWFyZ2luOiAwIDAgMCAyMHB4OwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/admin/user/manage","sourcesContent":["<template>\n  <div class=\"user-manage\">\n    <div class=\"operators\">\n      <div class=\"search\">\n        <el-form :inline=\"true\" ref=\"paramsModel\" :model=\"params\">\n          <el-form-item label=\"登录名\" prop=\"name\">\n            <el-input\n              type=\"text\"\n              v-model.trim=\"params.name\"\n              placeholder=\"请输入登录名\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"手机号\" prop=\"teleNumber\">\n            <el-input\n              type=\"text\"\n              v-model.trim=\"params.teleNumber\"\n              placeholder=\"请输入手机号\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item label=\"角色\" prop=\"roleId\">\n            <el-select v-model=\"params.roleId\" clearable placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in options\"\n                :key=\"item.roleId\"\n                :label=\"item.roleName\"\n                :value=\"item.roleId\"\n              >\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-search\"\n              size=\"small\"\n              @click=\"search\"\n              >搜索</el-button\n            >\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-search\"\n              size=\"small\"\n              @click=\"reset\"\n              >重置</el-button\n            >\n          </el-form-item>\n        </el-form>\n      </div>\n    </div>\n    <div class=\"table-list\">\n      <el-button\n        type=\"primary\"\n        class=\"fa fa-plus-circle fa-lg\"\n        size=\"small\"\n        @click=\"add\"\n        >&nbsp;用户新增</el-button\n      >\n      <el-button\n        type=\"warning\"\n        class=\"fa fa-plus-circle fa-lg\"\n        size=\"small\"\n        @click=\"delets\"\n        >&nbsp;批量删除</el-button\n      >\n      <el-table\n        ref=\"multipleTable\"\n        :data=\"table\"\n        @selection-change=\"handleSelectionChange\"\n        :row-key=\"getRowKey\"\n        header-row-class-name=\"headerRow\"\n        :header-cell-style=\"{ background: '#eef1f6', color: '#606266' }\"\n      >\n        <el-table-column type=\"selection\" width=\"55\"> </el-table-column>\n        <el-table-column\n          v-for=\"(column, i) in columnConfig\"\n          :key=\"i\"\n          :label=\"column.label\"\n          :prop=\"column.prop\"\n          :min-width=\"column.minWidth\"\n          :align=\"column.align\"\n        ></el-table-column>\n        <el-table-column label=\"状态\">\n          <template #default=\"{row}\">\n            <el-switch\n              v-model=\"row.status\"\n              :active-color=\"activeColor\"\n              :inactive-color=\"unactiveColor\"\n              @change=\"(val) => changeStatus(val, row)\"\n            >\n            </el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" min-width=\"150px\">\n          <template #default=\"{row}\">\n            <el-button type=\"primary\" size=\"mini\" @click=\"edit(row)\"\n              >编辑</el-button\n            >\n            <el-button type=\"warning\" size=\"mini\" @click=\"del(row)\"\n              >删除</el-button\n            >\n            <el-button type=\"danger\" size=\"mini\" @click=\"resetPwd(row)\"\n              >重置密码</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <cdialog v-if=\"showUserManage\" :roles=\"options\"></cdialog>\n    <div class=\"pagination\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"params.page\"\n        :page-sizes=\"[10, 20, 30, 40]\"\n        :page-size=\"params.limit\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dialog from \"@/components/user/manage/dialog\";\nimport { columnConfig } from \"./index.js\";\nexport default {\n  components: { cdialog: dialog },\n  data() {\n    return {\n      activeColor: \"#00B9ED\",\n      unactiveColor: \"red\",\n      table: [],\n      options: [],\n      params: {\n        page: 1,\n        limit: 10,\n        name: \"\",\n        teleNumber: \"\",\n        roleId: \"\",\n      },\n      total: 0,\n      columnConfig: columnConfig,\n      showUserManage: false,\n      multipleSelection: [],\n    };\n  },\n  events: {\n    getUserManage({\n      id,\n      jobNumber,\n      username,\n      deptId,\n      roleId,\n      teleNumber,\n      nickName,\n      status,\n    }) {\n      if (id) {\n        this.editSubmit({\n          id,\n          jobNumber,\n          username,\n          deptId,\n          roleId,\n          teleNumber,\n          nickName,\n          status,\n        });\n        return;\n      }\n      this.addSubmit({\n        jobNumber,\n        username,\n        deptId,\n        roleId,\n        teleNumber,\n        nickName,\n      });\n    },\n    closeUserManageDialog() {\n      this.showUserManage = false;\n    },\n  },\n  methods: {\n    handleSelectionChange(selection) {\n      this.multipleSelection = selection;\n    },\n    getRowKey(row) {\n      return row.id;\n    },\n    reset() {\n      this.$refs[\"paramsModel\"].resetFields();\n      this.search();\n    },\n    resetPwd({ id }) {\n      this.$confirm(\"是否确认重置密码?\", \"安全提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          this.$axios({\n            url: \"/api-admin/user/resetPassword\",\n            type: \"post\",\n            data: {\n              id\n            },\n          })\n            .then((res) => {\n              let {code,msg} = res;\n              if(code != 0) return this.$message({\n                type:'info',\n                message:msg || '重置失败'\n              })\n              this.$message({\n                type:'info',\n                message:msg || '重置成功'\n              })\n            })\n            .catch((err) => {\n              this.$message({\n                message: err.msg || \"重置失败\",\n              });\n            });\n        })\n        .catch(() => {});\n    },\n    handleSizeChange(pageSize) {\n      this.limit = pageSize;\n      this.search();\n    },\n    handleCurrentChange(current) {\n      this.page = current;\n      this.search();\n    },\n    getRoleLists() {\n      //获取角色管理列表\n      this.$axios({\n        url: \"/api-admin/role/all\",\n        type: \"get\",\n      })\n        .then((res) => {\n          const page = (res || {}).page || [];\n          this.options = page;\n        })\n        .catch((err) => {});\n    },\n    search() {\n      this.$axios({\n        url: \"/api-admin/user/list\",\n        type: \"get\",\n        data: this.params,\n      })\n        .then((res) => {\n          const page = (res || {}).page || {};\n          this.table = page.rows || [];\n          if (this.table.length > 0)\n            [\n              this.table.forEach((item) => {\n                //status新增时默认为1--启用\n                item.status = item.status == 0 ? false : true;\n              }),\n            ];\n          this.total = +page.total;\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"获取字典列表失败\",\n          });\n        });\n    },\n    add() {\n      this.showUserManage = true;\n    },\n    addSubmit({ jobNumber, username, deptId, roleId, teleNumber, nickName }) {\n      this.$axios({\n        url: \"/api-admin/user/add\",\n        type: \"post\",\n        data: {\n          jobNumber,\n          username,\n          deptId:deptId.slice(-1)[0],\n          roleId,\n          teleNumber,\n          nickName,\n        },\n      })\n        .then((res) => {\n          this.showUserManage = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"用户新增失败\",\n          });\n        });\n    },\n    edit(row) {\n      this.showUserManage = true;\n      this.$nextTick((_) => {\n        console.log(row)\n        this.$trigger(\"editUserManage\", row);\n      });\n    },\n    editSubmit({\n      id,\n      jobNumber,\n      username,\n      deptId,\n      roleId,\n      teleNumber,\n      nickName,\n      status,\n    }) {\n      this.$axios({\n        url: \"/api-admin/user/update\",\n        type: \"post\",\n        data: {\n          id,\n          jobNumber,\n          username,\n          deptId,\n          roleId,\n          teleNumber,\n          nickName,\n          status:status?1:0,\n        },\n      })\n        .then((res) => {\n          this.showUserManage = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            message: err.msg || \"用户编辑失败\",\n          });\n        });\n    },\n    del({ id }) {\n      this.$confirm(\"是否确认删除此用户?\", \"安全提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      })\n        .then(() => {\n          this.$axios({\n            url: \"/api-admin/user/delete\",\n            type: \"post\",\n            data: {\n              ids: id,\n            },\n          })\n            .then((res) => {\n              this.$message({\n                type: \"success\",\n                message: \"删除成功!\",\n              });\n              this.search();\n            })\n            .catch((err) => {\n              this.$message({\n                message: err.msg || \"删除失败\",\n              });\n            });\n        })\n        .catch(() => {});\n    },\n    delets() {\n      if (this.multipleSelection.length == 0) {\n        this.$message({\n          type: \"info\",\n          message: \"请勾选要删除的项\",\n        });\n      } else {\n        let ids = [];\n        this.multipleSelection.forEach((item) => {\n          ids.push(item.id);\n        });\n        this.$confirm(\"是否确认删除所选用户?\", \"安全提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\",\n        })\n          .then(() => {\n            this.$axios({\n              url: \"/api-admin/user/delete\",\n              type: \"post\",\n              data: {\n                ids: ids.join(\",\"),\n              },\n            })\n              .then((res) => {\n                this.$message({\n                  type: \"success\",\n                  message: \"删除成功!\",\n                });\n                this.search();\n              })\n              .catch((err) => {\n                this.$message({\n                  message: err.msg || \"删除失败\",\n                });\n              });\n          })\n          .catch(() => {});\n      }\n    },\n    changeStatus(val, row) {\n      let {\n        id,\n        jobNumber,\n        username,\n        deptId,\n        roleId,\n        teleNumber,\n        nickName,\n      } = row;\n      this.$axios({\n        url: \"/api-admin/user/update\",\n        type: \"post\",\n        data: {\n          id,\n          jobNumber,\n          username,\n          deptId,\n          roleId: +roleId,\n          teleNumber,\n          nickName,\n          status:!!val?1:0,\n        },\n      })\n        .then((res) => {\n          let { code, msg } = res;\n          if (code == 0) {\n            this.$set(row, \"status\", val);\n            this.$message({\n              type: \"success\",\n              message: msg || \"状态更新成功\",\n            });\n          } else {\n            this.$set(row, \"status\", !val);\n            this.$message({\n              type: \"info\",\n              message: msg || \"状态更新失败\",\n            });\n          }\n        })\n        .catch((err) => {\n          this.$set(row, \"status\", !val);\n          this.$message({\n            type: \"info\",\n            message: err.msg || \"状态更新失败\",\n          });\n        });\n    },\n  },\n  created() {\n    this.search();\n    this.getRoleLists();\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.user-manage {\n  padding: 20px;\n  .operators,\n  .operators .search {\n    display: flex;\n  }\n  .table-list {\n    margin: 20px 0 0 0;\n    background: #fff;\n    padding-top: 20px;\n  }\n  .operators /deep/ .el-input {\n    width: 250px;\n  }\n  .pagination {\n    padding: 50px;\n    text-align: center;\n    background-color: #fff;\n  }\n  /deep/ .el-button {\n    margin: 0 0 0 20px;\n  }\n}\n</style>\n"]}]}