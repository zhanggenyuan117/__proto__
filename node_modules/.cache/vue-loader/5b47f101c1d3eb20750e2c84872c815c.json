{"remainingRequest":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/vueprototype/src/pages/admin/menu/manage/index.vue?vue&type=style&index=0&id=3a572ac4&lang=less&scoped=true&","dependencies":[{"path":"/Users/apple/Desktop/vueprototype/src/pages/admin/menu/manage/index.vue","mtime":1599616394000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/vueprototype/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoud3JhcHBlciB7CiAgcGFkZGluZzogMjBweDsKICAuY29udGVudCB7CiAgICB3aWR0aDogMTAwJTsKICAgIG1pbi1oZWlnaHQ6IDYwMHB4OwogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIHBhZGRpbmctdG9wOiA1MHB4OwogICAgcGFkZGluZy1sZWZ0OiA1MHB4OwogICAgLnNlYXJjaCB7CiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7CiAgICAgIC5lbC1pbnB1dCB7CiAgICAgICAgd2lkdGg6IDM1MHB4OwogICAgICAgIG1hcmdpbi1yaWdodDogNTBweDsKICAgICAgfQogICAgfQogICAgLmN1c3RvbS10cmVlLW5vZGUgewogICAgICBmbGV4OiAwLjI7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICBwYWRkaW5nLXJpZ2h0OiA4cHg7CiAgICAgIC5lbC10cmVlLW5vZGUgewogICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgfQogICAgICAuYnV0dG9ucywKICAgICAgLmJ1dHRvbnMyIHsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgICAgbGVmdDogMjQwcHg7CiAgICAgIH0KICAgICAgLmVsLWJ1dHRvbiB7CiAgICAgICAgd2lkdGg6IDIwcHg7CiAgICAgICAgaGVpZ2h0OiAyMHB4OwogICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICAgICAgcGFkZGluZzogMCAyMnB4IDAgNnB4OwogICAgICB9CiAgICB9CiAgICAuYnV0dG9ucyB7CiAgICAgIC5lbC1idXR0b246bnRoLW9mLXR5cGUoMikgewogICAgICAgIG9wYWNpdHk6IDAuNTsKICAgICAgfQogICAgICAuZWwtYnV0dG9uOm50aC1vZi10eXBlKDMpIHsKICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsKICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZjNiNTQ1OwogICAgICAgIGNvbG9yOiAjZjNiNTQ1OwogICAgICB9CiAgICB9CiAgICAuYnV0dG9uczIgewogICAgICAuZWwtYnV0dG9uOm50aC1vZi10eXBlKDEpIHsKICAgICAgICBvcGFjaXR5OiAwLjU7CiAgICAgIH0KICAgICAgLmVsLWJ1dHRvbjpudGgtb2YtdHlwZSgyKSB7CiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7CiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2YzYjU0NTsKICAgICAgICBjb2xvcjogI2YzYjU0NTsKICAgICAgfQogICAgfQogIH0KICAuZWwtZGlhbG9nIHsKICAgIC5lbC1mb3JtLWl0ZW0gewogICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/admin/menu/manage","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div class=\"content\">\n      <div class=\"search\">\n        <el-input placeholder=\"输入关键字进行过滤\" v-model=\"filterText\">\n        </el-input>\n        <el-button type=\"primary\" @click=\"addMenu\">菜单新增</el-button>\n      </div>\n      <el-tree\n        :data=\"menuDatas\"\n        node-key=\"id\"\n        default-expand-all\n        accordion\n        :expand-on-click-node=\"false\"\n        :filter-node-method=\"filterNode\"\n        ref=\"tree\"\n        :props=\"defaultProp\"\n      >\n        <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n          <span>{{ node.label }}</span>\n          <span class=\"buttons\" v-if=\"data.status == 1\">\n            <el-button\n              type=\"primary\"\n              @click=\"() => append(data)\"\n              icon=\"el-icon-plus\"\n            >\n            </el-button>\n            <el-button\n              type=\"primary\"\n              @click=\"() => edit(data)\"\n              icon=\"el-icon-edit\"\n            >\n            </el-button>\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-minus\"\n              @click=\"() => remove(node, data)\"\n            >\n            </el-button>\n          </span>\n          <span class=\"buttons2\" v-else>\n            <el-button\n              type=\"primary\"\n              @click=\"() => edit(data)\"\n              icon=\"el-icon-edit\"\n            >\n            </el-button>\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-minus\"\n              @click=\"() => remove(node, data)\"\n            >\n            </el-button>\n          </span>\n        </span>\n      </el-tree>\n    </div>\n    <div class=\"dialog\">\n      <el-dialog\n        :title=\"!isAdd ? '编辑' : '新增'\"\n        :visible.sync=\"dialogFormVisible\"\n        :center=\"true\"\n      >\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n          <el-form-item\n            v-if=\"!flag\"\n            label=\"类型\"\n            :label-width=\"formLabelWidth\"\n            prop=\"status\"\n          >\n            <el-radio-group v-model=\"form.status\" v-if=\"isAdd\">\n              <el-radio :label=\"1\">菜单</el-radio>\n              <el-radio :label=\"2\">操作</el-radio>\n            </el-radio-group>\n            <el-radio-group v-model=\"form.status\" v-if=\"!isAdd\">\n              <el-radio :label=\"1\" :disabled=\"form.status != 1\">菜单</el-radio>\n              <el-radio :label=\"2\" :disabled=\"form.status != 2\">操作</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"名称\" :label-width=\"formLabelWidth\" prop=\"name\">\n            <el-input\n              v-model=\"form.name\"\n              autocomplete=\"off\"\n              placeholder=\"请输入名称\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item\n            label=\"访问路径\"\n            :label-width=\"formLabelWidth\"\n            prop=\"url\"\n          >\n            <el-input\n              v-model=\"form.url\"\n              autocomplete=\"off\"\n              placeholder=\"请输入访问路径\"\n            ></el-input>\n          </el-form-item>\n          <el-form-item\n            label=\"图标类名\"\n            :label-width=\"formLabelWidth\"\n            prop=\"icon\"\n          >\n            <el-input\n              v-model=\"form.icon\"\n              autocomplete=\"off\"\n              placeholder=\"请输入图标类名\"\n            ></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submit\">确 定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n<script>\nlet id = 1000;\n\nexport default {\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val);\n    },\n  },\n  data() {\n    return {\n      defaultProp: {\n        label: \"name\",\n      },\n      filterText: \"\",\n      menuDatas: [],\n      dialogFormVisible: false,\n      formLabelWidth: \"100px\",\n      form: {\n        id: \"\",\n        name: \"\",\n        url: \"\",\n        icon: \"\",\n        pid: \"\",\n        status: 1, //默认为1 菜单\n      },\n      rules: {\n        name: [{ required: true, trigger: \"blur\", message: \"请输入菜单名称\" }],\n        // url: [{ required: true, trigger: \"blur\", message: \"请输入访问路径\" }],\n      },\n      flag: true, //点击菜单新增按钮标识\n      isAdd: false,\n    };\n  },\n  methods: {\n    search() {\n      this.$axios({\n        url: \"/api-admin/menu/list\",\n        type: \"post\",\n      }).then((res) => {\n        let { code, msg } = res;\n        if (code != 0)\n          return this.$message({\n            type: \"error\",\n            message: msg || \"菜单获取失败\",\n          });\n        this.menuDatas = (res || {}).page || [];\n      });\n    },\n    addMenu() {\n      this.isAdd = true;\n      this.flag = true;\n      this.dialogFormVisible = true;\n      this.$nextTick((_) => {\n        this.$refs.ruleForm.resetFields();\n      });\n    },\n    submit() {\n      if (!this.isAdd) {\n        this.update();\n      } else {\n        this.add();\n      }\n    },\n    add() {\n      this.$refs.ruleForm.validate((valid) => {\n        if (valid) {\n          if (!this.form.status) this.form.status = 1; //默认\n          if (this.flag) {\n            this.form.pid = 0;\n          }\n          let { name, url, icon, pid, status } = this.form;\n          this.$axios({\n            type: \"post\",\n            url: \"/api-admin/menu/add\",\n            data: { name, url, icon, pid, status },\n          })\n            .then((res) => {\n              let { code, msg } = res;\n              if (code != 0)\n                return this.$message({\n                  type: \"error\",\n                  message: msg || \"新增失败\",\n                });\n              this.dialogFormVisible = false;\n              this.search();\n            })\n            .catch((err) => {\n              this.$message({\n                type: \"error\",\n                message: err.msg || \"新增失败\",\n              });\n            });\n        }\n      });\n    },\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n    append(data) {\n      console.log(data);\n      this.flag = false;\n      this.isAdd = true;\n      this.dialogFormVisible = true;\n      this.$nextTick((_) => {\n        this.$refs.ruleForm.resetFields();\n        this.form.pid = data.id;\n        console.log(this.form);\n      });\n    },\n    edit(data) {\n      this.flag = false;\n      this.isAdd = false;\n      this.dialogFormVisible = true;\n      this.$nextTick((_) => {\n        //编辑菜单\n        let { id, name, url, icon, pid, status } = data;\n        Object.assign(this.form, { id, name, url, icon, pid, status });\n        console.log(this.form);\n      });\n    },\n    update() {\n      this.$axios({\n        url: \"/api-admin/menu/update\",\n        type: \"post\",\n        data: this.form,\n      })\n        .then((res) => {\n          let { code, msg } = res;\n          if (code != 0)\n            return this.$message({\n              type: \"error\",\n              message: msg || \"更新失败\",\n            });\n          this.$message({\n            type: \"success\",\n            message: msg || \"更新成功\",\n          });\n          this.dialogFormVisible = false;\n          this.search();\n        })\n        .catch((err) => {\n          this.$message({\n            type: \"error\",\n            message: err.msg || \"更新失败\",\n          });\n        });\n    },\n    remove(node, data) {\n      console.log(data);\n      this.$axios({\n        url: \"/api-admin/menu/delete\",\n        type: \"post\",\n        data: {\n          id: data.id,\n        },\n      }).then((res) => {\n        let { code, msg } = res;\n        if (code != 0)\n          return this.$message({\n            type: \"error\",\n            message: msg || \"删除失败\",\n          });\n        const parent = node.parent;\n        const children = parent.data.children || parent.data;\n        const index = children.findIndex((d) => d.id === data.id);\n        children.splice(index, 1);\n        this.$message({\n          type: \"success\",\n          message: msg || \"删除成功\",\n        });\n        this.search();\n      });\n    },\n\n    // renderContent(h, { node, data, store }) {\n    //   return (\n    //     <span class=\"custom-tree-node\">\n    //       <span>{node.label}</span>\n    //       <span>\n    //         <el-button\n    //           size=\"mini\"\n    //           type=\"text\"\n    //           on-click={() => this.append(data)}\n    //         >\n    //           Append\n    //         </el-button>\n    //         <el-button\n    //           size=\"mini\"\n    //           type=\"text\"\n    //           on-click={() => this.remove(node, data)}\n    //         >\n    //           Delete\n    //         </el-button>\n    //       </span>\n    //     </span>\n    //   );\n    // },\n  },\n  created() {\n    this.search();\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n.wrapper {\n  padding: 20px;\n  .content {\n    width: 100%;\n    min-height: 600px;\n    background: #fff;\n    padding-top: 50px;\n    padding-left: 50px;\n    .search {\n      margin-bottom: 30px;\n      .el-input {\n        width: 350px;\n        margin-right: 50px;\n      }\n    }\n    .custom-tree-node {\n      flex: 0.2;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      font-size: 16px;\n      padding-right: 8px;\n      .el-tree-node {\n        position: relative;\n      }\n      .buttons,\n      .buttons2 {\n        display: block;\n        position: absolute;\n        left: 240px;\n      }\n      .el-button {\n        width: 20px;\n        height: 20px;\n        box-sizing: border-box;\n        padding: 0 22px 0 6px;\n      }\n    }\n    .buttons {\n      .el-button:nth-of-type(2) {\n        opacity: 0.5;\n      }\n      .el-button:nth-of-type(3) {\n        background: transparent;\n        border: 1px solid #f3b545;\n        color: #f3b545;\n      }\n    }\n    .buttons2 {\n      .el-button:nth-of-type(1) {\n        opacity: 0.5;\n      }\n      .el-button:nth-of-type(2) {\n        background: transparent;\n        border: 1px solid #f3b545;\n        color: #f3b545;\n      }\n    }\n  }\n  .el-dialog {\n    .el-form-item {\n      margin-bottom: 20px;\n    }\n  }\n}\n</style>\n"]}]}